git:
  gclean: "マージ済みブランチを削除してブランチ一覧表示"
  gundo: "最後のコミットを取り消し（変更はstaging areaに残る）"
  gwip: "全変更をWIPコミットとして保存"
  gunwip: "WIPコミットを取り消し"
  glog: "全ブランチのグラフ付きログ表示"
  gstash: "現在時刻をメッセージにしてstash"
  gpop: "最新のstashを適用して削除"
  gdiff: "単語単位で色付き差分表示"
  gshow: "コミット詳細と変更ファイル統計を表示"
  gs: "git status"
  gp: "git push"
  gpl: "git pull --rebase"
  gb: "git branch"
  gco: "git checkout"
  gcob: "git checkout -b [ブランチ名]"
  ga: "git add"
  gc: "git commit"
  gcm: "git commit -m [メッセージ]"
  grt: "リポジトリのルートディレクトリに移動"

docker:
  dc: "docker compose"
  dcu: "docker compose up -d"
  dcd: "docker compose down"
  dcb: "docker compose build"
  dcr: "docker compose run --rm [サービス名]"
  dce: "docker compose exec [サービス名] bash"
  dcl: "docker compose logs"
  dps: "docker ps"
  di: "docker images"
  dr: "docker rm [コンテナID]"
  dri: "docker rmi [イメージID]"

system:
  ls: "ファイル一覧表示（eza）"
  ll: "詳細ファイル一覧"
  la: "隠しファイル含む一覧"
  find: "ファイル検索（fd）"
  grep: "テキスト検索（ripgrep）"
  cat: "ファイル表示（bat）"
  ps: "プロセス一覧"
  top: "リソース使用状況（htop）"
  df: "ディスク使用量"
  du: "ディレクトリサイズ"

dev:
  "npm install": "npm依存関係インストール"
  "npm run dev": "開発サーバー起動"
  "npm run build": "本番ビルド"
  "npm run test": "テスト実行"
  "cargo run": "Rustプロジェクト実行"
  "cargo build": "Rustビルド"
  "cargo test": "Rustテスト"
  "python -m venv venv": "Python仮想環境作成"
  "source venv/bin/activate": "Python仮想環境有効化"

custom:
  # ここに個人のカスタムコマンドを追加
  example: "例：独自のコマンド"